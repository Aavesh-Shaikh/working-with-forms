{"ast":null,"code":"var _jsxFileName = \"/home/aavesh/Desktop/my-projects/working-with-forms/src/components/SimpleInput.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SimpleInput = props => {\n  _s();\n  const [enteredName, setEnteredName] = useState('');\n  const [enteredNameTouched, setEnteredNameTouched] = useState(false);\n  const [formIsValid, setFormIsValid] = useState(false);\n  const [emailIsTouched, setEmailIsTouched] = useState(false);\n  const [enteredEmail, setEnteredEmail] = useState('');\n  const enteredNameIsValid = enteredName.trim() !== '';\n  const nameInputIsInvalid = !enteredNameIsValid && enteredNameTouched;\n  const emailFocused = !emailIsTouched ? 'form-control invalid' : 'form-control';\n  const emailIsValid = enteredEmail.includes('@');\n  const emailInputIsInvalid = !emailIsValid;\n  useEffect(() => {\n    if (enteredNameIsValid) {\n      setFormIsValid(true);\n    } else {\n      setFormIsValid(false);\n    }\n  }, [enteredNameIsValid]);\n  const nameInputChangeHandler = event => {\n    setEnteredName(event.target.value);\n  };\n  const nameInputBlurHandler = () => {\n    setEnteredNameTouched(false);\n  };\n  const emailInputChangeHandler = event => {\n    setEnteredEmail(event.target.value);\n    if (event.target.value.length > 1) {\n      setEnteredEmail(true);\n    } else {\n      set;\n    }\n  };\n  const onEmailBlurHandler = event => {\n    if (event.target.value === '') {\n      setEmailIsTouched(true);\n    }\n  };\n  const formSubmissionHandler = event => {\n    event.preventDefault();\n    setEnteredNameTouched(true);\n    if (!enteredNameIsValid) {\n      return;\n    }\n    console.log(enteredName);\n\n    // nameInputRef.current.value = ''; => NOT IDEAL, DON'T MANIPULATE THE DOM\n    setEnteredName('');\n  };\n  const nameInputClasses = nameInputIsInvalid ? 'form-control invalid' : 'form-control';\n  const emailInputClasses = emailInputIsInvalid ? 'form-control invalid' : 'form-control';\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmissionHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        onChange: nameInputChangeHandler,\n        value: enteredName,\n        onBlur: nameInputBlurHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), nameInputIsInvalid && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Name must not be empty.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: emailInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Your Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: emailInputChangeHandler,\n        onBlur: onEmailBlurHandler,\n        type: \"email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 10\n      }, this), emailInputIsInvalid && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Email Must Contain @\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 34\n      }, this), emailIsTouched && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Email Must Not be Empty\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 29\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !formIsValid,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n};\n_s(SimpleInput, \"TJuFN3kUK3Shsu4qp1uMlgtHAcA=\");\n_c = SimpleInput;\nexport default SimpleInput;\nvar _c;\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"names":["useEffect","useState","SimpleInput","props","enteredName","setEnteredName","enteredNameTouched","setEnteredNameTouched","formIsValid","setFormIsValid","emailIsTouched","setEmailIsTouched","enteredEmail","setEnteredEmail","enteredNameIsValid","trim","nameInputIsInvalid","emailFocused","emailIsValid","includes","emailInputIsInvalid","nameInputChangeHandler","event","target","value","nameInputBlurHandler","emailInputChangeHandler","length","set","onEmailBlurHandler","formSubmissionHandler","preventDefault","console","log","nameInputClasses","emailInputClasses"],"sources":["/home/aavesh/Desktop/my-projects/working-with-forms/src/components/SimpleInput.js"],"sourcesContent":["import {  useEffect, useState } from 'react';\n\nconst SimpleInput = (props) => {\n\n  const [enteredName, setEnteredName] = useState('');\n  const [enteredNameTouched, setEnteredNameTouched] = useState(false);\n  const [formIsValid,setFormIsValid] = useState(false)\n  const [emailIsTouched , setEmailIsTouched] = useState(false)\n  const [enteredEmail , setEnteredEmail] = useState('');\n\n  const enteredNameIsValid = enteredName.trim() !== '';\n  const nameInputIsInvalid = !enteredNameIsValid && enteredNameTouched;\n\n  const emailFocused = !emailIsTouched\n  ? 'form-control invalid'\n  : 'form-control';\n\n  const emailIsValid = enteredEmail.includes('@');\n  const emailInputIsInvalid = !emailIsValid;\n\n\n\n \n\n  useEffect( () => {\n    if(enteredNameIsValid){\n      setFormIsValid(true);\n    }\n    else{\n      setFormIsValid(false)\n    }\n  },[enteredNameIsValid])\n\n  const nameInputChangeHandler = (event) => {\n    setEnteredName(event.target.value);\n  };\n  const nameInputBlurHandler = () => {\n    setEnteredNameTouched(false)\n  }\n\n  const emailInputChangeHandler = (event) => {\n    setEnteredEmail(event.target.value)\n    if(event.target.value.length > 1){\n      setEnteredEmail(true)\n    }\n    else{\n      set\n    }\n  };\n  const onEmailBlurHandler = (event) => {\n    if(event.target.value === ''){\n      setEmailIsTouched(true)\n    }\n    \n  }\n\n  \n  \n\n  const formSubmissionHandler = (event) => {\n    event.preventDefault();\n\n    setEnteredNameTouched(true);\n\n    if (!enteredNameIsValid) {\n     \n      return;\n    }\n\n\n\n    console.log(enteredName);\n\n    // nameInputRef.current.value = ''; => NOT IDEAL, DON'T MANIPULATE THE DOM\n    setEnteredName('');\n  };\n\n  \n\n  const nameInputClasses = nameInputIsInvalid\n    ? 'form-control invalid'\n    : 'form-control';\n\n    const emailInputClasses = emailInputIsInvalid\n    ? 'form-control invalid'\n    : 'form-control';\n\n  \n\n    \n\n  return (\n    <form onSubmit={formSubmissionHandler}>\n      <div className={nameInputClasses}>\n        <label htmlFor='name'>Your Name</label>\n        <input\n        \n          type='text'\n          id='name'\n          onChange={nameInputChangeHandler}\n          value={enteredName}\n          onBlur={nameInputBlurHandler}\n        />\n        {nameInputIsInvalid && (\n          <p className='error-text'>Name must not be empty.</p>\n        )}\n        </div>\n        <div className={emailInputClasses}>\n       <label>Your Email</label>\n         <input \n         onChange={emailInputChangeHandler}\n         onBlur={onEmailBlurHandler}\n         type=\"email\"/>\n         {emailInputIsInvalid && <p className='error-text'>Email Must Contain @</p>}\n         {emailIsTouched && <p className='error-text'>Email Must Not be Empty</p>}\n         </div>\n      \n      <div className='form-actions'>\n        <button disabled={!formIsValid}>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default SimpleInput;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}